<?php 
/*<meta charset="utf-8">*/
/*
fopen(‘ссылка на файл’, ‘режим’) — открывает указанный файл.
fwrite(fopen(), ‘текст’) — записывает текст в файл.
fgets(fopen(), 4096) — читает строку из файла. Подробнее ТУТ.
fclose(fopen()) — закрывает указанный файл.
is_writable(‘ссылка на файл’) — пррверяет существует ли файл и доступен ли для записи.
is_readable() — Определяет существование файла и доступен ли он для чтения
feof() — Проверяет, достигнут ли конец файла
Режимы fopen():
r	- только для чтения; указатель в начало файла.
r+	- для чтения и записи; указатель в начало файла.
w	- только для записи; указатель в начало файла и обрезает файл до нулевой длины. Если файл не существует — пробует его создать.
w+	- для чтения и записи; указатель в начало файла и обрезает файл до нулевой длины. Если файл не существует — пытается его создать.
a	- только для записи; указатель в конец файла. Если файл не существует — пытается его создать. В данном режиме функция fseek() не применима, записи всегда добавляются.
a+	- файл для чтения и записи; указатель в конец файла. Если файл не существует — пытается его создать. В данном режиме функция fseek() влияет только на место чтения, записи всегда добавляются.
x	- создаёт и открывает только для записи; указатель в начало файла. Если файл уже существует, вызов fopen() закончится неудачей, вернёт FALSE и выдаст ошибку уровня E_WARNING. Если файл не существует, попытается его создать. Это эквивалентно указанию флагов O_EXCL|O_CREAT для внутреннего системного вызова open(2).
x+	- создаёт и открывает для чтения и записи; в остальном имеет то же поведение что и x.
c	- только для записи. Если файл не существует, то он создается. Если же файл существует, то он не обрезается (в отличии от w), и вызов к этой функции не вызывает ошибку (также как и в случае с x). Указатель на файл будет установлен на начало файла. Это может быть полезно при желании заблокировать файл (смотри flock()) перед изменением, так как использование w может обрезать файл еще до того как была получена блокировка (если вы желаете обрезать файл, можно использовать функцию ftruncate() после запроса на блокировку).
c+	- для чтения и записи; в остальном имеет то же поведение, что и ‘c’.
К режиму можно добавить еще два значения:
b - файл открывается в бинарном режиме
t - файл открывается как текст
*/



function fcreate($filename,$string){
	$path = 'files/'.$filename.'.txt'; //путь к файлу
  	$file = fopen($path,'w'); //создаем файл и открываем его для записи
  	$write = fwrite($file, $string); //Записываем строку в файл
    if($write) echo "Данные успешно записаны!<br>"; // проверяем успешность выполнения операции
  	else echo "Не удалось записать данные!<br>";
	//закрываем файл
	fclose($file);
}

function fileread($filename){
	$path = 'files/'.$filename.'.txt'; 		// путь к файлу
	$file = fopen($path,'r'); 				// открываем файл для чтения
	if($file){								// если файл успешно открылся
	    while (!feof($file)) {				// тогда пока файл не достигнет конца
	      $read = fgets($file);				// считываем данные с файла
	      echo $read.'<br>';				// и выводим текст на экран
	    }
	}
	else echo "Ошибка при открытии файла<br>"; // если файл не открылся, то сообщаем об этом

  	// Осуществим проход массива и выведем содержимое в виде HTML-кода вместе с номерами строк.
	foreach ($lines as $line_num => $line) {
    	echo "Строка #<b>{$line_num}</b> : " . htmlspecialchars($line) . "<br />\n";
	}
	// Второй пример. Получим содержание веб-страницы в виде одной строки.
	// См. также описание функции file_get_contents().
	$html = implode('', file('//www.zapchasti40.ru/'));

  	fclose($file); // Закрываем файл
}


function getMessage($i_msg_code){
	$f_msg_code 	= $i_msg_code;
	$f_msg_exists 	= 'no';
	$f_msg_title 	= 'Поиск сообшения';
	$f_msg_message1 = 'Строка '.$f_msg_code.' не найдена';
	$f_msg_message2 = '';
	$f_msg_message0 = '';

	$f_path = 'messages.txt';
	//$f_file = fopen($f_path,'r');
	$result = explode("\n", file_get_contents($f_path));
	foreach ( $result as $key=>$val )
    {
        if ( strpos($val,$f_msg_code,0) !==false )
        {
            /*echo $key.'-'.$val;*/
            $f_msg_exists 	= 'yes = '.$key.'-'.$val;
	      	$f_msg_title 	= $result[$key + 1];		// следуюшая строка = Заголовок;
			$f_msg_message1 = $result[$key + 2];		// следуюшая строка = Сообщение 1;
			$f_msg_message2 = $result[$key + 3];		// следуюшая строка = Сообщение 2;
			break;
        }
    }

/*
	$f_path = 'messages.txt';
	$f_file = fopen($f_path,'r');
	if($f_file){							// файл успешно открылся
	    while (!feof($f_file)) {			// пока файл не достигнет конца
	      $f_row = fgets($f_file);			// считываем данные с файла
	      $f_msg_message0 = $f_msg_message0.", ".$f_row;
		      if(stripos($f_row, $f_msg_code)<0) {
			$f_msg_message1 = 'Строка f_msg_code='.$f_msg_code." - не найдена, мать вашу!";		      	
			$f_msg_code = 0;
	      } else {
	      	$f_msg_exists 	= 'yes';
	      	$f_msg_title 	= fgets($f_file);		// следуюшая строка = Заголовок;
			$f_msg_message1 = fgets($f_file);		// следуюшая строка = Сообщение 1;
			$f_msg_message2 = fgets($f_file);		// следуюшая строка = Сообщение 2;
			exit;
	      }
	    }
	}
	else echo "Ошибка при открытии файла<br>";
	*/
	$f_msg_message2 = $f_msg_message0;		// следуюшая строка = Сообщение 2;

	return array($f_msg_code,$f_msg_exists,$f_msg_title,$f_msg_message1,$f_msg_message2);
	// принимаем результат - list  ($v_msg_code,$v_msg_exists,$v_msg_title,$v_msg_message1,$v_msg_message2);
}

?>